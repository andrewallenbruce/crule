[{"path":[]},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement andrewallenbruce@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://andrewallenbruce.github.io/crule/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla‚Äôs code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://andrewallenbruce.github.io/crule/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Andrew Allen Bruce Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andrewallenbruce.github.io/crule/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Allen Bruce. Author, maintainer, copyright holder.","code":""},{"path":"https://andrewallenbruce.github.io/crule/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruce AA (2024). crule: Healthcare Claims Rules Engine. R package version 0.0.0.9006, https://andrewallenbruce.github.io/crule/, https://github.com/andrewallenbruce/crule.","code":"@Manual{,   title = {crule: Healthcare Claims Rules Engine},   author = {Andrew Allen Bruce},   year = {2024},   note = {R package version 0.0.0.9006,     https://andrewallenbruce.github.io/crule/},   url = {https://github.com/andrewallenbruce/crule}, }"},{"path":"https://andrewallenbruce.github.io/crule/index.html","id":"crule","dir":"","previous_headings":"","what":"crule ‚Ä¢ Healthcare Claims Rules Engine","title":"crule ‚Ä¢ Healthcare Claims Rules Engine","text":"Healthcare Claims Rules Engine","code":""},{"path":"https://andrewallenbruce.github.io/crule/index.html","id":"package-installation","dir":"","previous_headings":"","what":"üì¶ Installation","title":"crule ‚Ä¢ Healthcare Claims Rules Engine","text":"can install crule GitHub :","code":"# install.packages(\"pak\") pak::pak(\"andrewallenbruce/crule\")"},{"path":"https://andrewallenbruce.github.io/crule/index.html","id":"balance_scale-code-of-conduct","dir":"","previous_headings":"","what":"‚öñÔ∏è Code of Conduct","title":"crule ‚Ä¢ Healthcare Claims Rules Engine","text":"Please note crule project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce vector to <chr> ‚Äî as_chr","title":"Coerce vector to <chr> ‚Äî as_chr","text":"Coerce vector <chr>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce vector to <chr> ‚Äî as_chr","text":"","code":"as_chr(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/as_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce vector to <chr> ‚Äî as_chr","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce vector to <chr> ‚Äî as_chr","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce vector to <date> class ‚Äî as_date","title":"Coerce vector to <date> class ‚Äî as_date","text":"Coerce vector <date> class","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce vector to <date> class ‚Äî as_date","text":"","code":"as_date(x, ..., fmt = \"%Y-%m-%d\")"},{"path":"https://andrewallenbruce.github.io/crule/reference/as_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce vector to <date> class ‚Äî as_date","text":"x vector ... additional arguments fmt <chr> format; default \"%Y-%m-%d\"","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce vector to <date> class ‚Äî as_date","text":"<date> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce vector to <int> ‚Äî as_int","title":"Coerce vector to <int> ‚Äî as_int","text":"Coerce vector <int>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce vector to <int> ‚Äî as_int","text":"","code":"as_int(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/as_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce vector to <int> ‚Äî as_int","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce vector to <int> ‚Äî as_int","text":"<int> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce vector to <num> class ‚Äî as_num","title":"Coerce vector to <num> class ‚Äî as_num","text":"Coerce vector <num> class","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce vector to <num> class ‚Äî as_num","text":"","code":"as_num(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/as_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce vector to <num> class ‚Äî as_num","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/as_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce vector to <num> class ‚Äî as_num","text":"<num> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/crule-package.html","id":null,"dir":"Reference","previous_headings":"","what":"crule: Healthcare Claims Rules Engine ‚Äî crule-package","title":"crule: Healthcare Claims Rules Engine ‚Äî crule-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/crule/reference/crule-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"crule: Healthcare Claims Rules Engine ‚Äî crule-package","text":"Maintainer: Andrew Allen Bruce andrewallenbruce@gmail.com [copyright holder]","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruler.html","id":null,"dir":"Reference","previous_headings":"","what":"Save filter conditions ‚Äî cruler","title":"Save filter conditions ‚Äî cruler","text":"Save series filter conditions, support logical operating among conditions","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save filter conditions ‚Äî cruler","text":"","code":"cruler(x = expression(), .env = NULL)"},{"path":"https://andrewallenbruce.github.io/crule/reference/cruler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save filter conditions ‚Äî cruler","text":"x expression .env environment","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save filter conditions ‚Äî cruler","text":"cruler object","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save filter conditions ‚Äî cruler","text":"","code":"c1 <- cruler(cut == \"Fair\")  c2 <- cruler(x > 8)  !c1 #> <quosure> #> expr: ^!cut == \"Fair\" #> env:  0x55f3ee76c658  c1 | c2 #> <quosure> #> expr: ^cut == \"Fair\" | x > 8 #> env:  0x55f3ed9d4e88  c1 & c2 #> <quosure> #> expr: ^cut == \"Fair\" & x > 8 #> env:  0x55f3ee109800"},{"path":"https://andrewallenbruce.github.io/crule/reference/cruleval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate cruler object ‚Äî cruleval","title":"Evaluate cruler object ‚Äî cruleval","text":"Evaluate cruler object","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruleval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate cruler object ‚Äî cruleval","text":"","code":"cruleval(.data, cruler = NULL, .by = NULL, usecol = TRUE)"},{"path":"https://andrewallenbruce.github.io/crule/reference/cruleval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate cruler object ‚Äî cruleval","text":".data tibble cruler cruler object .group , .argument dplyr::filter usecol TRUE (default), use default behavior dplyr::filter(), allows usage variable colnames, filter data column. FALSE, check whether variables right side ==,>,<,>=,<= names columns raise error. Ignore argument using .env !!","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruleval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate cruler object ‚Äî cruleval","text":"tibble","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/cruleval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate cruler object ‚Äî cruleval","text":"","code":"if (FALSE) { c1 <- cruler(hcpcs == \"A9000\")  c2 <- cruler(x > 8)  ex |> cruleval(c1)  ex |> cruleval(c1 & c2)  x <- 8 cnd <- cruler(y > x)  cruleval(ex, cnd)  try(cruleval(ex, cnd, usecol = FALSE))  cnd <- cruler(y > !!x)  cruleval(ex, cnd)  cnd <- cruler(y > .env$x) cruleval(ex, cnd) }"},{"path":"https://andrewallenbruce.github.io/crule/reference/delist.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlist and unname ‚Äî delist","title":"Unlist and unname ‚Äî delist","text":"Unlist unname","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/delist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlist and unname ‚Äî delist","text":"","code":"delist(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/delist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlist and unname ‚Äî delist","text":"x Named unnamed <list>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/delist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlist and unname ‚Äî delist","text":"Unnamed <chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/desplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlist, unname and split ‚Äî desplit","title":"Unlist, unname and split ‚Äî desplit","text":"Unlist, unname split","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/desplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlist, unname and split ‚Äî desplit","text":"","code":"desplit(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/desplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlist, unname and split ‚Äî desplit","text":"x <chr> string named <list>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Vector Empty? ‚Äî empty","title":"Is Vector Empty? ‚Äî empty","text":"Vector Empty?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Vector Empty? ‚Äî empty","text":"","code":"empty(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Vector Empty? ‚Äî empty","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Vector Empty? ‚Äî empty","text":"<lgl> TRUE empty, else FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/false.html","id":null,"dir":"Reference","previous_headings":"","what":"Is x FALSE? ‚Äî false","title":"Is x FALSE? ‚Äî false","text":"x FALSE?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/false.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is x FALSE? ‚Äî false","text":"","code":"false(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/false.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is x FALSE? ‚Äî false","text":"x input","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/false.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is x FALSE? ‚Äî false","text":"<lgl> TRUE x FALSE, else FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gather_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather atomic expressions ‚Äî gather_expr","title":"Gather atomic expressions ‚Äî gather_expr","text":"Gather atomic expressions","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gather_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather atomic expressions ‚Äî gather_expr","text":"","code":"gather_expr(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/gather_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather atomic expressions ‚Äî gather_expr","text":"x expression","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gather_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather atomic expressions ‚Äî gather_expr","text":"<chr> vector expressions","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gather_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gather atomic expressions ‚Äî gather_expr","text":"","code":"ex <- rlang::expr(a == 2 & b == 3 | !b & x + 2)  gather_expr(ex) #> [1] \"|\"      \"&\"      \"a == 2\" \"b == 3\" \"&\"      \"!b\"     \"x + 2\""},{"path":"https://andrewallenbruce.github.io/crule/reference/gelm.html","id":null,"dir":"Reference","previous_headings":"","what":"getelem with more flexibility ‚Äî gelm","title":"getelem with more flexibility ‚Äî gelm","text":"getelem flexibility","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gelm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getelem with more flexibility ‚Äî gelm","text":"","code":"gelm(l, e, m = \"re\", ...)"},{"path":"https://andrewallenbruce.github.io/crule/reference/gelm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getelem with more flexibility ‚Äî gelm","text":"l named <list> e <chr> element name; can regex pattern m \"re\" m <chr> mode; default \"re\" (regex) \"df\" (data frame) ... additional arguments pass collapse::get_elem()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/gelm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getelem with more flexibility ‚Äî gelm","text":"<chr> <data.frame>, depending m","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/get_pin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pinned dataset from mount_board() ‚Äî get_pin","title":"Get pinned dataset from mount_board() ‚Äî get_pin","text":"Get pinned dataset mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/get_pin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pinned dataset from mount_board() ‚Äî get_pin","text":"","code":"get_pin(pin, ...)"},{"path":"https://andrewallenbruce.github.io/crule/reference/get_pin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pinned dataset from mount_board() ‚Äî get_pin","text":"pin <chr> string name pinned dataset ... additional arguments passed mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/get_pin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pinned dataset from mount_board() ‚Äî get_pin","text":"<tibble> <data.frame>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/getelem.html","id":null,"dir":"Reference","previous_headings":"","what":"Get named element from list ‚Äî getelem","title":"Get named element from list ‚Äî getelem","text":"Get named element list","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/getelem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get named element from list ‚Äî getelem","text":"","code":"getelem(l, e)"},{"path":"https://andrewallenbruce.github.io/crule/reference/getelem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get named element from list ‚Äî getelem","text":"l named <list> e <chr> element name; can regex pattern","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/getelem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get named element from list ‚Äî getelem","text":"<chr> element value","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/if_empty_null.html","id":null,"dir":"Reference","previous_headings":"","what":"If x is empty, NULL, else x ‚Äî if_empty_null","title":"If x is empty, NULL, else x ‚Äî if_empty_null","text":"x empty, NULL, else x","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/if_empty_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If x is empty, NULL, else x ‚Äî if_empty_null","text":"","code":"if_empty_null(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/if_empty_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"If x is empty, NULL, else x ‚Äî if_empty_null","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/if_empty_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"If x is empty, NULL, else x ‚Äî if_empty_null","text":"x NULL","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/iif_else.html","id":null,"dir":"Reference","previous_headings":"","what":"ifelse wrapper using kit::iif ‚Äî iif_else","title":"ifelse wrapper using kit::iif ‚Äî iif_else","text":"ifelse wrapper using kit::iif","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/iif_else.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ifelse wrapper using kit::iif ‚Äî iif_else","text":"","code":"iif_else(x, yes, no)"},{"path":"https://andrewallenbruce.github.io/crule/reference/iif_else.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ifelse wrapper using kit::iif ‚Äî iif_else","text":"x <lgl> vector yes, Values return depending TRUE/FALSE element x. Must type either length 1 length x.","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/iif_else.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ifelse wrapper using kit::iif ‚Äî iif_else","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/invert_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert a named vector ‚Äî invert_named","title":"Invert a named vector ‚Äî invert_named","text":"Invert named vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/invert_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert a named vector ‚Äî invert_named","text":"","code":"invert_named(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/invert_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert a named vector ‚Äî invert_named","text":"x named vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/invert_named.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert a named vector ‚Äî invert_named","text":"named vector names values inverted","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/is_atomic_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Is expression atomic? ‚Äî is_atomic_expr","title":"Is expression atomic? ‚Äî is_atomic_expr","text":"expression atomic?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/is_atomic_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is expression atomic? ‚Äî is_atomic_expr","text":"","code":"is_atomic_expr(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/is_atomic_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is expression atomic? ‚Äî is_atomic_expr","text":"x expression","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/is_atomic_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is expression atomic? ‚Äî is_atomic_expr","text":"logical","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/is_atomic_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is expression atomic? ‚Äî is_atomic_expr","text":"","code":"is_atomic_expr(rlang::expr(x)) #> [1] TRUE  is_atomic_expr(rlang::expr(!x)) #> [1] TRUE  is_atomic_expr(rlang::expr(x + y)) #> [1] TRUE  is_atomic_expr(rlang::expr(x > 1)) #> [1] TRUE  is_atomic_expr(rlang::expr(!x + y)) #> [1] FALSE  is_atomic_expr(rlang::expr(x > 1 | y < 2)) #> [1] FALSE"},{"path":"https://andrewallenbruce.github.io/crule/reference/list_pins.html","id":null,"dir":"Reference","previous_headings":"","what":"List pins from mount_board() ‚Äî list_pins","title":"List pins from mount_board() ‚Äî list_pins","text":"List pins mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/list_pins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List pins from mount_board() ‚Äî list_pins","text":"","code":"list_pins(...)"},{"path":"https://andrewallenbruce.github.io/crule/reference/list_pins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List pins from mount_board() ‚Äî list_pins","text":"... arguments pass mount_board()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/list_pins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List pins from mount_board() ‚Äî list_pins","text":"<chr> vector named pins","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/max_vlen.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Vector Length ‚Äî max_vlen","title":"Maximum Vector Length ‚Äî max_vlen","text":"Maximum Vector Length","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/max_vlen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Vector Length ‚Äî max_vlen","text":"","code":"max_vlen(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/max_vlen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Vector Length ‚Äî max_vlen","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/max_vlen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Vector Length ‚Äî max_vlen","text":"<int> maximum length vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/mount_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Mount pins board ‚Äî mount_board","title":"Mount pins board ‚Äî mount_board","text":"Mount pins board","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/mount_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mount pins board ‚Äî mount_board","text":"","code":"mount_board(source = c(\"local\", \"remote\"))"},{"path":"https://andrewallenbruce.github.io/crule/reference/mount_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mount pins board ‚Äî mount_board","text":"source <chr> \"local\" \"remote\"","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/mount_board.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mount pins board ‚Äî mount_board","text":"<pins_board_folder> <pins_board_url>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate to filter out NAs ‚Äî na","title":"Predicate to filter out NAs ‚Äî na","text":"Predicate filter NAs","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate to filter out NAs ‚Äî na","text":"","code":"na(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate to filter out NAs ‚Äî na","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate to filter out NAs ‚Äî na","text":"<lgl> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert values to NA ‚Äî na_if","title":"Convert values to NA ‚Äî na_if","text":"Convert values NA","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert values to NA ‚Äî na_if","text":"","code":"na_if(x, y)"},{"path":"https://andrewallenbruce.github.io/crule/reference/na_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert values to NA ‚Äî na_if","text":"x vector modify y values convert NA. Type must match x.","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/na_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert values to NA ‚Äî na_if","text":"x values y converted NA","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate to filter out NAs ‚Äî not_na","title":"Predicate to filter out NAs ‚Äî not_na","text":"Predicate filter NAs","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate to filter out NAs ‚Äî not_na","text":"","code":"not_na(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/not_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate to filter out NAs ‚Äî not_na","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate to filter out NAs ‚Äî not_na","text":"<lgl> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Is x not NULL? ‚Äî not_null","title":"Is x not NULL? ‚Äî not_null","text":"x NULL?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is x not NULL? ‚Äî not_null","text":"","code":"not_null(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/not_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is x not NULL? ‚Äî not_null","text":"x input","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/not_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is x not NULL? ‚Äî not_null","text":"<lgl> TRUE x NULL, else FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/null.html","id":null,"dir":"Reference","previous_headings":"","what":"Is x NULL? ‚Äî null","title":"Is x NULL? ‚Äî null","text":"x NULL?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is x NULL? ‚Äî null","text":"","code":"null(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is x NULL? ‚Äî null","text":"x input","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is x NULL? ‚Äî null","text":"<lgl> TRUE x NULL, else FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/pos_name_to_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Place of Service Name to Code ‚Äî pos_name_to_code","title":"Place of Service Name to Code ‚Äî pos_name_to_code","text":"Place Service Name Code","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/pos_name_to_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place of Service Name to Code ‚Äî pos_name_to_code","text":"","code":"pos_name_to_code(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/pos_name_to_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place of Service Name to Code ‚Äî pos_name_to_code","text":"x <chr> vector pos names","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/pos_name_to_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Place of Service Name to Code ‚Äî pos_name_to_code","text":"<chr> vector pos codes","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/pos_name_to_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place of Service Name to Code ‚Äî pos_name_to_code","text":"","code":"pos_name_to_code(c( \"TELEHEALTH PROVIDED OTHER THAN IN PATIENT HOME\", \"TELEHEALTH PROVIDED OTHER THAN IN PT HOME\", \"TELEHEALTH PROVIDED OTHER THAN PT HOME\")) #> [1] \"02\" \"02\" \"02\""},{"path":"https://andrewallenbruce.github.io/crule/reference/random_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random strings ‚Äî random_string","title":"Generate random strings ‚Äî random_string","text":"Generate random strings","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/random_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random strings ‚Äî random_string","text":"","code":"random_string(n, ln, p = \"[A-Z0-9]\")"},{"path":"https://andrewallenbruce.github.io/crule/reference/random_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random strings ‚Äî random_string","text":"n <int> number strings generate ln <int> length string p <chr> pattern sample ; default \"[-Z0-9]\"","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/random_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random strings ‚Äî random_string","text":"<chr> vector random strings","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_all_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove columns and rows with all NAs ‚Äî remove_all_na","title":"Remove columns and rows with all NAs ‚Äî remove_all_na","text":"Remove columns rows NAs","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_all_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove columns and rows with all NAs ‚Äî remove_all_na","text":"","code":"remove_all_na(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_all_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove columns and rows with all NAs ‚Äî remove_all_na","text":"x vector <data.frame>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_all_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove columns and rows with all NAs ‚Äî remove_all_na","text":"vector <data.frame> columns rows NAs removed","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove single or double quotes from a character string ‚Äî remove_quotes","title":"Remove single or double quotes from a character string ‚Äî remove_quotes","text":"Remove single double quotes character string","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove single or double quotes from a character string ‚Äî remove_quotes","text":"","code":"remove_quotes(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove single or double quotes from a character string ‚Äî remove_quotes","text":"x <chr> vector convert","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/remove_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove single or double quotes from a character string ‚Äî remove_quotes","text":"<chr> vector quotes removed","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/roundup.html","id":null,"dir":"Reference","previous_headings":"","what":"Round up to nearest decimal place ‚Äî roundup","title":"Round up to nearest decimal place ‚Äî roundup","text":"Round nearest decimal place","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/roundup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round up to nearest decimal place ‚Äî roundup","text":"","code":"roundup(x, d = 2)"},{"path":"https://andrewallenbruce.github.io/crule/reference/roundup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round up to nearest decimal place ‚Äî roundup","text":"x <num> vector d <int> decimal places round ; default 2","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/roundup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round up to nearest decimal place ‚Äî roundup","text":"<num> vector rounded nearest decimal place","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/search_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Search in data frame column if search term is not NULL ‚Äî search_in","title":"Search in data frame column if search term is not NULL ‚Äî search_in","text":"Search data frame column search term NULL","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/search_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search in data frame column if search term is not NULL ‚Äî search_in","text":"","code":"search_in(x, column, what)"},{"path":"https://andrewallenbruce.github.io/crule/reference/search_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search in data frame column if search term is not NULL ‚Äî search_in","text":"x vector <data.frame> column <chr> string column name search column","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/search_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search in data frame column if search term is not NULL ‚Äî search_in","text":"vector <data.frame>","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_at.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Vector at One Index Point ‚Äî sf_at","title":"Subset Vector at One Index Point ‚Äî sf_at","text":"Subset Vector One Index Point","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Vector at One Index Point ‚Äî sf_at","text":"","code":"sf_at(x, idx = 1)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Vector at One Index Point ‚Äî sf_at","text":"x <chr> vector idx <int> index","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Vector at One Index Point ‚Äî sf_at","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate Vectors ‚Äî sf_c","title":"Concatenate Vectors ‚Äî sf_c","text":"Concatenate Vectors","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate Vectors ‚Äî sf_c","text":"","code":"sf_c(...)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate Vectors ‚Äî sf_c","text":"... number vectors, coerced <chr> vector, necessary","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate Vectors ‚Äî sf_c","text":"<chr> concatenated vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of characters in character vector ‚Äî sf_chars","title":"Count number of characters in character vector ‚Äî sf_chars","text":"Count number characters character vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of characters in character vector ‚Äî sf_chars","text":"","code":"sf_chars(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_chars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of characters in character vector ‚Äî sf_chars","text":"x <chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_chars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of characters in character vector ‚Äî sf_chars","text":"<int> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to stringfish vector ‚Äî sf_conv","title":"Convert string to stringfish vector ‚Äî sf_conv","text":"Convert string stringfish vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to stringfish vector ‚Äî sf_conv","text":"","code":"sf_conv(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to stringfish vector ‚Äî sf_conv","text":"x <chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string to stringfish vector ‚Äî sf_conv","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect by Regex ‚Äî sf_detect","title":"Detect by Regex ‚Äî sf_detect","text":"Detect Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect by Regex ‚Äî sf_detect","text":"","code":"sf_detect(s, p)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect by Regex ‚Äî sf_detect","text":"s <chr> vector p <chr> regex pattern","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect by Regex ‚Äî sf_detect","text":"<lgl> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract by Regex ‚Äî sf_extract","title":"Extract by Regex ‚Äî sf_extract","text":"Extract Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract by Regex ‚Äî sf_extract","text":"","code":"sf_extract(s, p)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract by Regex ‚Äî sf_extract","text":"s <chr> vector p <chr> regex pattern","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract by Regex ‚Äî sf_extract","text":"<chr> vector pattern extracted","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_ndetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Opposite by Regex ‚Äî sf_ndetect","title":"Detect Opposite by Regex ‚Äî sf_ndetect","text":"Detect Opposite Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_ndetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Opposite by Regex ‚Äî sf_ndetect","text":"","code":"sf_ndetect(s, p)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_ndetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Opposite by Regex ‚Äî sf_ndetect","text":"s <chr> vector p <chr> regex pattern","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_ndetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Opposite by Regex ‚Äî sf_ndetect","text":"<lgl> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_nextract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Opposite by Regex ‚Äî sf_nextract","title":"Extract Opposite by Regex ‚Äî sf_nextract","text":"Extract Opposite Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_nextract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Opposite by Regex ‚Äî sf_nextract","text":"","code":"sf_nextract(s, p)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_nextract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Opposite by Regex ‚Äî sf_nextract","text":"s <chr> vector p <chr> regex pattern","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_nextract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Opposite by Regex ‚Äî sf_nextract","text":"<chr> vector pattern extracted","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove by Regex ‚Äî sf_remove","title":"Remove by Regex ‚Äî sf_remove","text":"Remove Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove by Regex ‚Äî sf_remove","text":"","code":"sf_remove(s, p, fix = FALSE)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove by Regex ‚Äî sf_remove","text":"s <chr> vector p <chr> regex pattern fix <lgl> fixed regex; default FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove by Regex ‚Äî sf_remove","text":"<chr> vector pattern removed","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace by Regex ‚Äî sf_replace","title":"Replace by Regex ‚Äî sf_replace","text":"Replace Regex","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace by Regex ‚Äî sf_replace","text":"","code":"sf_replace(s, p, r, fix = FALSE)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace by Regex ‚Äî sf_replace","text":"s <chr> vector p <chr> regex pattern r <chr> replacement fix <lgl> fixed regex; default FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace by Regex ‚Äî sf_replace","text":"<chr> vector pattern replaced","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_smush.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Vector ‚Äî sf_smush","title":"Collapse Vector ‚Äî sf_smush","text":"Collapse Vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_smush.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Vector ‚Äî sf_smush","text":"","code":"sf_smush(x, sep = \"\")"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_smush.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Vector ‚Äî sf_smush","text":"x <chr> vector sep <chr> separator; default \"\"","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_smush.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Vector ‚Äî sf_smush","text":"<chr> collapsed vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_strsplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Split string by delimiter ‚Äî sf_strsplit","title":"Split string by delimiter ‚Äî sf_strsplit","text":"Split string delimiter","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_strsplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split string by delimiter ‚Äî sf_strsplit","text":"","code":"sf_strsplit(x, s, fix = TRUE)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_strsplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split string by delimiter ‚Äî sf_strsplit","text":"x <chr> vector s <chr> delimiter split fix <lgl> fixed regex; default TRUE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_strsplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split string by delimiter ‚Äî sf_strsplit","text":"<list> split strings","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Vector by Range ‚Äî sf_sub","title":"Subset Vector by Range ‚Äî sf_sub","text":"Subset Vector Range","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Vector by Range ‚Äî sf_sub","text":"","code":"sf_sub(x, start = 1, stop)"},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Vector by Range ‚Äî sf_sub","text":"x <chr> vector start <int> index start; default 1 stop <int> index end","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/sf_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Vector by Range ‚Äî sf_sub","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/strsort.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Sort ‚Äî strsort","title":"Parallel Sort ‚Äî strsort","text":"Parallel Sort","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/strsort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Sort ‚Äî strsort","text":"","code":"strsort(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/strsort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Sort ‚Äî strsort","text":"x <chr> vector. , default base::sort()","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/strsort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Sort ‚Äî strsort","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/true.html","id":null,"dir":"Reference","previous_headings":"","what":"Is x TRUE? ‚Äî true","title":"Is x TRUE? ‚Äî true","text":"x TRUE?","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is x TRUE? ‚Äî true","text":"","code":"true(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/true.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is x TRUE? ‚Äî true","text":"x input","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/true.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is x TRUE? ‚Äî true","text":"<lgl> TRUE x TRUE, else FALSE","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Values of Vector ‚Äî uniq","title":"Unique Values of Vector ‚Äî uniq","text":"Unique Values Vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Values of Vector ‚Äî uniq","text":"","code":"uniq(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Values of Vector ‚Äî uniq","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Values of Vector ‚Äî uniq","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_narm.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Values with NAs Removed ‚Äî uniq_narm","title":"Unique Values with NAs Removed ‚Äî uniq_narm","text":"Unique Values NAs Removed","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_narm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Values with NAs Removed ‚Äî uniq_narm","text":"","code":"uniq_narm(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_narm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Values with NAs Removed ‚Äî uniq_narm","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_narm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Values with NAs Removed ‚Äî uniq_narm","text":"<chr> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_vlen.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Lengths of Vector ‚Äî uniq_vlen","title":"Unique Lengths of Vector ‚Äî uniq_vlen","text":"Unique Lengths Vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_vlen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Lengths of Vector ‚Äî uniq_vlen","text":"","code":"uniq_vlen(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_vlen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Lengths of Vector ‚Äî uniq_vlen","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/uniq_vlen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Lengths of Vector ‚Äî uniq_vlen","text":"<int> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/vlen.html","id":null,"dir":"Reference","previous_headings":"","what":"Lengths of Vector ‚Äî vlen","title":"Lengths of Vector ‚Äî vlen","text":"Lengths Vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/vlen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lengths of Vector ‚Äî vlen","text":"","code":"vlen(x)"},{"path":"https://andrewallenbruce.github.io/crule/reference/vlen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lengths of Vector ‚Äî vlen","text":"x vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/reference/vlen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lengths of Vector ‚Äî vlen","text":"<int> vector","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009006-2024-12-26","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9006 (2024-12-26)","title":"crule 0.0.0.9006 (2024-12-26)","text":"update standalone-helpers","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009005-2024-12-16","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9005 (2024-12-16)","title":"crule 0.0.0.9005 (2024-12-16)","text":"update standalone-helpers","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009004-2024-12-16","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9004 (2024-12-16)","title":"crule 0.0.0.9004 (2024-12-16)","text":"pos_name_to_code helper raw sources","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009003-2024-12-15","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9003 (2024-12-15)","title":"crule 0.0.0.9003 (2024-12-15)","text":"experiment condition capture","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009002-2024-12-15","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9002 (2024-12-15)","title":"crule 0.0.0.9002 (2024-12-15)","text":"updated standalone-helpers","code":""},{"path":"https://andrewallenbruce.github.io/crule/news/index.html","id":"crule-0009000-2024-12-14","dir":"Changelog","previous_headings":"","what":"crule 0.0.0.9000 (2024-12-14)","title":"crule 0.0.0.9000 (2024-12-14)","text":"Initial commit.","code":""}]
